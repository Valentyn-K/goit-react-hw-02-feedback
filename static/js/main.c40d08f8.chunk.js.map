{"version":3,"sources":["components/Section/Section.module.css","utils/feedBackButtons.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/App/App.js","index.js","components/FeedbackOptions/FeedBackOptions.module.css","components/App/App.module.css"],"names":["module","exports","feedBackButtons","Object","freeze","GOOD","NEUTRAL","BAD","Section","title","children","className","styles","sectionWraper","childrenWraper","FeedBackOptions","options","onLeaveFeedback","alert","map","option","optionButton","type","key","onClick","Statistics","good","neutral","bad","total","positivePercentage","values","App","state","props","initialValue","incrementFeedBacks","name","setState","prevState","sumOfFeedbacks","reduce","acc","cur","Math","round","this","appWrapper","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,cAAgB,iC,mJCKnBC,EANSC,OAAOC,OAAO,CACpCC,KAAM,OACNC,QAAS,UACTC,IAAK,Q,gBCQQC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAWC,IAAOC,eACzB,4BAAKJ,GACL,yBAAKE,UAAWC,IAAOE,gBAAiBJ,K,gBCiB7BK,EApBS,SAAC,GAAD,QACtBC,eADsB,MACZ,GADY,MAEtBC,uBAFsB,MAEJ,WAChBC,MAAM,4DAHc,SAMtB,oCACGF,EAAQG,KAAI,SAACC,GAAD,OACX,4BACET,UAAWC,IAAOS,aAClBC,KAAK,SACLC,IAAKH,EACLI,QAAS,kBAAMP,EAAgBG,KAE9BA,QCFMK,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjBJ,GAAQC,GAAWC,EACjB,oCACE,mCAASF,EAAT,KACA,sCAAYC,EAAZ,KACA,kCAAQC,EAAR,KACA,oCAAUC,IAAV,KACA,gDAAsBC,IAAtB,QAGF,iD,gBCLEd,EAAUb,OAAO4B,OAAO7B,GAET8B,E,4MASnBC,MAAQ,CACNP,KAAM,EAAKQ,MAAMC,aACjBR,QAAS,EAAKO,MAAMC,aACpBP,IAAK,EAAKM,MAAMC,c,EAGlBC,mBAAqB,SAACC,GACpB,EAAKC,UAAS,SAACC,GAAD,sBAAmBF,EAAOE,EAAUF,GAAQ,O,EAG5DG,eAAiB,WAGf,OAFkBrC,OAAO4B,OAAO,EAAKE,OACbQ,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,M,EAIrDb,mBAAqB,kBACnBc,KAAKC,MAAO,EAAKZ,MAAMP,KAAO,EAAKc,iBAAoB,M,uDAE/C,IAAD,EACwBM,KAAKb,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,yBAAKjB,UAAWC,IAAOmC,YACrB,kBAAC,EAAD,CAAStC,MAAM,yBACb,kBAAC,EAAD,CACEO,QAASA,EACTC,gBAAiB6B,KAAKV,sBAG1B,kBAAC,EAAD,CAAS3B,MAAM,cACb,kBAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKN,eACZV,mBAAoBgB,KAAKhB,2B,GA7CJkB,aAAZhB,EACZiB,aAAe,CACpBd,aAAc,GCRlBe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDrD,EAAOC,QAAU,CAAC,aAAe,wC,kBCAjCD,EAAOC,QAAU,CAAC,WAAa,2B","file":"static/js/main.c40d08f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWraper\":\"Section_sectionWraper__28uC_\"};","const feedBackButtons = Object.freeze({\r\n  GOOD: \"good\",\r\n  NEUTRAL: \"neutral\",\r\n  BAD: \"bad\",\r\n});\r\n\r\nexport default feedBackButtons;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.sectionWraper}>\r\n    <h2>{title}</h2>\r\n    <div className={styles.childrenWraper}>{children}</div>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedBackOptions.module.css\";\r\n\r\nconst FeedBackOptions = ({\r\n  options = [],\r\n  onLeaveFeedback = function () {\r\n    alert(\"Sorry, something went wrong. Try to reload this page :(\");\r\n  },\r\n}) => (\r\n  <>\r\n    {options.map((option) => (\r\n      <button\r\n        className={styles.optionButton}\r\n        type=\"button\"\r\n        key={option}\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default FeedBackOptions;\r\n\r\nFeedBackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) =>\r\n  good || neutral || bad ? (\r\n    <>\r\n      <p>Good:{good} </p>\r\n      <p>Neutral:{neutral} </p>\r\n      <p>Bad:{bad} </p>\r\n      <p>Total:{total()} </p>\r\n      <p>Positive Feedback:{positivePercentage()} % </p>\r\n    </>\r\n  ) : (\r\n    <p>No feedback given</p>\r\n  );\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport feedBackButtons from \"../../utils/feedBackButtons\";\nimport Section from \"../Section/Section\";\nimport FeedBackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport styles from \"./App.module.css\";\n\nconst options = Object.values(feedBackButtons);\n\nexport default class App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    initialValue: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  incrementFeedBacks = (name) => {\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  sumOfFeedbacks = () => {\n    const feedbacks = Object.values(this.state);\n    const total = feedbacks.reduce((acc, cur) => acc + cur);\n    return total;\n  };\n\n  positivePercentage = () =>\n    Math.round((this.state.good / this.sumOfFeedbacks()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className={styles.appWrapper}>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions\n            options={options}\n            onLeaveFeedback={this.incrementFeedBacks}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.sumOfFeedbacks}\n            positivePercentage={this.positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"FeedBackOptions_optionButton__2GvES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__KZVKF\"};"],"sourceRoot":""}